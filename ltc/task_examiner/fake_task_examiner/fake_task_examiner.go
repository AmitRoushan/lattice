// This file was generated by counterfeiter
package fake_task_examiner

import (
	"sync"

	"github.com/cloudfoundry-incubator/lattice/ltc/task_examiner"
)

type FakeTaskExaminer struct {
	TaskStatusStub        func(taskName string) (task_examiner.TaskInfo, error)
	taskStatusMutex       sync.RWMutex
	taskStatusArgsForCall []struct {
		taskName string
	}
	taskStatusReturns struct {
		result1 task_examiner.TaskInfo
		result2 error
	}
	TaskDeleteStub        func(taskGuid string) error
	taskDeleteMutex       sync.RWMutex
	taskDeleteArgsForCall []struct {
		taskGuid string
	}
	taskDeleteReturns struct {
		result1 error
	}
}

func (fake *FakeTaskExaminer) TaskStatus(taskName string) (task_examiner.TaskInfo, error) {
	fake.taskStatusMutex.Lock()
	fake.taskStatusArgsForCall = append(fake.taskStatusArgsForCall, struct {
		taskName string
	}{taskName})
	fake.taskStatusMutex.Unlock()
	if fake.TaskStatusStub != nil {
		return fake.TaskStatusStub(taskName)
	} else {
		return fake.taskStatusReturns.result1, fake.taskStatusReturns.result2
	}
}

func (fake *FakeTaskExaminer) TaskStatusCallCount() int {
	fake.taskStatusMutex.RLock()
	defer fake.taskStatusMutex.RUnlock()
	return len(fake.taskStatusArgsForCall)
}

func (fake *FakeTaskExaminer) TaskStatusArgsForCall(i int) string {
	fake.taskStatusMutex.RLock()
	defer fake.taskStatusMutex.RUnlock()
	return fake.taskStatusArgsForCall[i].taskName
}

func (fake *FakeTaskExaminer) TaskStatusReturns(result1 task_examiner.TaskInfo, result2 error) {
	fake.TaskStatusStub = nil
	fake.taskStatusReturns = struct {
		result1 task_examiner.TaskInfo
		result2 error
	}{result1, result2}
}

func (fake *FakeTaskExaminer) TaskDelete(taskGuid string) error {
	fake.taskDeleteMutex.Lock()
	fake.taskDeleteArgsForCall = append(fake.taskDeleteArgsForCall, struct {
		taskGuid string
	}{taskGuid})
	fake.taskDeleteMutex.Unlock()
	if fake.TaskDeleteStub != nil {
		return fake.TaskDeleteStub(taskGuid)
	} else {
		return fake.taskDeleteReturns.result1
	}
}

func (fake *FakeTaskExaminer) TaskDeleteCallCount() int {
	fake.taskDeleteMutex.RLock()
	defer fake.taskDeleteMutex.RUnlock()
	return len(fake.taskDeleteArgsForCall)
}

func (fake *FakeTaskExaminer) TaskDeleteArgsForCall(i int) string {
	fake.taskDeleteMutex.RLock()
	defer fake.taskDeleteMutex.RUnlock()
	return fake.taskDeleteArgsForCall[i].taskGuid
}

func (fake *FakeTaskExaminer) TaskDeleteReturns(result1 error) {
	fake.TaskDeleteStub = nil
	fake.taskDeleteReturns = struct {
		result1 error
	}{result1}
}

var _ task_examiner.TaskExaminer = new(FakeTaskExaminer)
